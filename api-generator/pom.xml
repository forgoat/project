<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.example</groupId>
	<artifactId>api-generator</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>api-generator</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<asciidoctor.maven.plugin.version>2.0.0-RC.1</asciidoctor.maven.plugin.version>
		<asciidoctorj.version>2.0.0</asciidoctorj.version>
		<jruby.version>9.2.7.0</jruby.version>
	</properties>

    <pluginRepositories>
        <pluginRepository>
            <id>jcenter-snapshots</id>
            <name>jcenter</name>
            <url>http://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
        </pluginRepository>
        <pluginRepository>
            <id>jcenter-releases</id>
            <name>jcenter</name>
            <url>http://jcenter.bintray.com</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
    <repositories>
        <repository>
            <id>jcentral</id>
            <name>bintray</name>
            <url>http://jcenter.bintray.com</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>jcenter-snapshots</id>
            <name>jcenter</name>
            <url>http://oss.jfrog.org/artifactory/oss-snapshot-local/</url>
        </repository>
    </repositories>

    <dependencies>
        <!--<dependency>-->
            <!--<groupId>io.github.swagger2markup</groupId>-->
            <!--<artifactId>swagger2markup</artifactId>-->
            <!--<version>1.3.1</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>nl.jworks.markdown_to_asciidoc</groupId>-->
            <!--<artifactId>markdown_to_asciidoc</artifactId>-->
            <!--<version>1.0</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>ch.netzwerg</groupId>-->
            <!--<artifactId>paleo-core</artifactId>-->
            <!--<version>0.10.2</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>io.swagger</groupId>-->
            <!--<artifactId>swagger-core</artifactId>-->
            <!--<version>1.5.16</version>-->
        <!--</dependency>-->
        <!--<dependency>-->
            <!--<groupId>io.swagger</groupId>-->
            <!--<artifactId>swagger-models</artifactId>-->
            <!--<version>1.5.16</version>-->
        <!--</dependency>-->
    </dependencies>
	<build>
		<defaultGoal>process-resources</defaultGoal>
		<plugins>
            <plugin>
                <groupId>io.github.swagger2markup</groupId>
                <artifactId>swagger2markup-maven-plugin</artifactId>
                <version>1.3.1</version>
                <configuration>
                     <!--api-docs访问url -->
<!--                    <swaggerInput>http://localhost:8001/v2/api-docs</swaggerInput>-->
<!--                    <outputFile>src/main/asciidoc/generated/hqei-server</outputFile>-->

                    <swaggerInput>http://localhost:8002/hqei/importExport/v2/api-docs</swaggerInput>
                    <outputFile>src/main/asciidoc/generated/hqei-import-export</outputFile>

<!--                    <swaggerInput>http://localhost:8003/hqei/task/v2/api-docs</swaggerInput>-->
<!--                    <outputFile>src/main/asciidoc/generated/hqei-task</outputFile>-->

<!--                    <swaggerInput>http://localhost:8004/hqei/process/v2/api-docs</swaggerInput>-->
<!--                    <outputFile>src/main/asciidoc/generated/hqei-process</outputFile>-->

<!--                     生成为单个文档，输出路径-->
<!--                    <outputFile>src/main/asciidoc/generated/hqei-process</outputFile>-->
<!--                     生成为多个文档，输出路径-->
<!--                    <outputDir>src/docs/asciidoc/generated</outputDir>-->
                    <config>
                        <!-- wiki格式文档 -->
                        <!--<swagger2markup.markupLanguage>CONFLUENCE_MARKUP</swagger2markup.markupLanguage>-->
                        <!-- ascii格式文档 -->
                        <swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
                        <!-- markdown格式文档 -->
                        <!--<swagger2markup.markupLanguage>MARKDOWN</swagger2markup.markupLanguage>-->
                        <swagger2markup.pathsGroupedBy>TAGS</swagger2markup.pathsGroupedBy>
                    </config>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>${asciidoctor.maven.plugin.version}</version>
				<dependencies>
					<!-- Comment this section to use the default jruby artifact provided by the plugin -->
					<dependency>
						<groupId>org.jruby</groupId>
						<artifactId>jruby-complete</artifactId>
						<version>${jruby.version}</version>
					</dependency>
					<!-- Comment this section to use the default AsciidoctorJ artifact provided by the plugin -->
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj</artifactId>
						<version>${asciidoctorj.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<sourceDirectory>src/main/asciidoc</sourceDirectory>
					<!-- If you set baseDir to ${project.basedir}, top-level includes are resolved relative to the project root -->
					<!--
                    <baseDir>${project.basedir}</baseDir>
                    -->
					<!-- Attributes common to all output formats -->
					<attributes>
						<!--<endpoint-url>http://example.org</endpoint-url>-->
						<!--<sourcedir>${project.build.sourceDirectory}</sourcedir>-->
						<!--<project-version>${project.version}</project-version>-->
                        <doctype>book</doctype>
                        <toc>left</toc>
                        <toclevels>3</toclevels>
                        <numbered></numbered>
                        <hardbreaks></hardbreaks>
                        <sectlinks></sectlinks>
                        <sectanchors></sectanchors>
					</attributes>
				</configuration>
				<executions>
					<execution>
						<id>asciidoc-to-html</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>html5</backend>
							<sourceHighlighter>coderay</sourceHighlighter>
                            <outputDirectory>${basedir}/docs/api/html</outputDirectory>
							<attributes>
								<!--<imagesdir>./images</imagesdir>-->
								<toc>left</toc>
								<icons>font</icons>
								<sectanchors>true</sectanchors>
								<!-- set the idprefix to blank -->
								<idprefix/>
								<idseparator>-</idseparator>
								<docinfo1>true</docinfo1>
							</attributes>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
